
use deku::prelude::*;
use deku::ctx::ByteSize;
use serde::Serialize;
use crate::nas::layer3::*;

/// Autogenerated rust code, do not modify directly! Any changes should be
/// made via the python generator scripts.

#[derive(DekuRead, Debug, Serialize, Clone)]
pub struct EMMServiceAccept {
    #[deku(ctx = "Tag(87)")] pub eps_bearer_ctxt_stat: Type4TLV<EPSBearerCtxtStat>,
    #[deku(ctx = "Tag(107)")] pub t_3448: Type4TLV<GPRSTimer>,
}

#[derive(DekuRead, Debug, Serialize, Clone)]
pub struct EPSBearerCtxtStat {
    pub ebi_7: EPSBearerCtxtStatEBI7,
    pub ebi_6: EPSBearerCtxtStatEBI6,
    pub ebi_5: EPSBearerCtxtStatEBI5,
    #[deku(bits = 1)] pub ebi_4: u8,
    #[deku(bits = 1)] pub ebi_3: u8,
    #[deku(bits = 1)] pub ebi_2: u8,
    #[deku(bits = 1)] pub ebi_1: u8,
    #[deku(bits = 1)] pub ebi_0: u8,
    pub ebi_15: EPSBearerCtxtStatEBI15,
    pub ebi_14: EPSBearerCtxtStatEBI14,
    pub ebi_13: EPSBearerCtxtStatEBI13,
    pub ebi_12: EPSBearerCtxtStatEBI12,
    pub ebi_11: EPSBearerCtxtStatEBI11,
    pub ebi_10: EPSBearerCtxtStatEBI10,
    pub ebi_9: EPSBearerCtxtStatEBI9,
    pub ebi_8: EPSBearerCtxtStatEBI8,
}

#[derive(DekuRead, Debug, Serialize, Clone)]
pub struct GPRSTimer {
    pub unit: GPRSTimerUnit,
    #[deku(bits = 5)] pub value: u8,
}
#[derive(DekuRead, Debug, Serialize, Clone, PartialEq)]
#[deku(id_type = "u8", bits = 3)]
pub enum GPRSTimerUnit {
    #[deku(id_pat = "0")] TwoSec,
    #[deku(id_pat = "1")] OneMin,
    #[deku(id_pat = "2")] SixMin,
    #[deku(id_pat = "7")] TimerDeactivated,
    #[deku(id_pat = "_")] Other,
}

#[derive(DekuRead, Debug, Serialize, Clone, PartialEq)]
#[deku(id_type = "u8", bits = 1)]
pub enum EPSBearerCtxtStatEBI7 {
    #[deku(id_pat = "0")] BEARERCONTEXTINACTIVE,
    #[deku(id_pat = "1")] BEARERCONTEXTACTIVE,
    #[deku(id_pat = "_")] Other,
}

#[derive(DekuRead, Debug, Serialize, Clone, PartialEq)]
#[deku(id_type = "u8", bits = 1)]
pub enum EPSBearerCtxtStatEBI6 {
    #[deku(id_pat = "0")] BEARERCONTEXTINACTIVE,
    #[deku(id_pat = "1")] BEARERCONTEXTACTIVE,
    #[deku(id_pat = "_")] Other,
}

#[derive(DekuRead, Debug, Serialize, Clone, PartialEq)]
#[deku(id_type = "u8", bits = 1)]
pub enum EPSBearerCtxtStatEBI5 {
    #[deku(id_pat = "0")] BEARERCONTEXTINACTIVE,
    #[deku(id_pat = "1")] BEARERCONTEXTACTIVE,
    #[deku(id_pat = "_")] Other,
}

#[derive(DekuRead, Debug, Serialize, Clone, PartialEq)]
#[deku(id_type = "u8", bits = 1)]
pub enum EPSBearerCtxtStatEBI15 {
    #[deku(id_pat = "0")] BEARERCONTEXTINACTIVE,
    #[deku(id_pat = "1")] BEARERCONTEXTACTIVE,
    #[deku(id_pat = "_")] Other,
}

#[derive(DekuRead, Debug, Serialize, Clone, PartialEq)]
#[deku(id_type = "u8", bits = 1)]
pub enum EPSBearerCtxtStatEBI14 {
    #[deku(id_pat = "0")] BEARERCONTEXTINACTIVE,
    #[deku(id_pat = "1")] BEARERCONTEXTACTIVE,
    #[deku(id_pat = "_")] Other,
}

#[derive(DekuRead, Debug, Serialize, Clone, PartialEq)]
#[deku(id_type = "u8", bits = 1)]
pub enum EPSBearerCtxtStatEBI13 {
    #[deku(id_pat = "0")] BEARERCONTEXTINACTIVE,
    #[deku(id_pat = "1")] BEARERCONTEXTACTIVE,
    #[deku(id_pat = "_")] Other,
}

#[derive(DekuRead, Debug, Serialize, Clone, PartialEq)]
#[deku(id_type = "u8", bits = 1)]
pub enum EPSBearerCtxtStatEBI12 {
    #[deku(id_pat = "0")] BEARERCONTEXTINACTIVE,
    #[deku(id_pat = "1")] BEARERCONTEXTACTIVE,
    #[deku(id_pat = "_")] Other,
}

#[derive(DekuRead, Debug, Serialize, Clone, PartialEq)]
#[deku(id_type = "u8", bits = 1)]
pub enum EPSBearerCtxtStatEBI11 {
    #[deku(id_pat = "0")] BEARERCONTEXTINACTIVE,
    #[deku(id_pat = "1")] BEARERCONTEXTACTIVE,
    #[deku(id_pat = "_")] Other,
}

#[derive(DekuRead, Debug, Serialize, Clone, PartialEq)]
#[deku(id_type = "u8", bits = 1)]
pub enum EPSBearerCtxtStatEBI10 {
    #[deku(id_pat = "0")] BEARERCONTEXTINACTIVE,
    #[deku(id_pat = "1")] BEARERCONTEXTACTIVE,
    #[deku(id_pat = "_")] Other,
}

#[derive(DekuRead, Debug, Serialize, Clone, PartialEq)]
#[deku(id_type = "u8", bits = 1)]
pub enum EPSBearerCtxtStatEBI9 {
    #[deku(id_pat = "0")] BEARERCONTEXTINACTIVE,
    #[deku(id_pat = "1")] BEARERCONTEXTACTIVE,
    #[deku(id_pat = "_")] Other,
}

#[derive(DekuRead, Debug, Serialize, Clone, PartialEq)]
#[deku(id_type = "u8", bits = 1)]
pub enum EPSBearerCtxtStatEBI8 {
    #[deku(id_pat = "0")] BEARERCONTEXTINACTIVE,
    #[deku(id_pat = "1")] BEARERCONTEXTACTIVE,
    #[deku(id_pat = "_")] Other,
}

