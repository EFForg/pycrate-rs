
use deku::prelude::*;
use deku::ctx::ByteSize;
use serde::Serialize;
use crate::nas::layer3::*;

/// Autogenerated rust code, do not modify directly! Any changes should be
/// made via the python generator scripts.

#[derive(DekuRead, Debug, Serialize, Clone)]
pub struct EMMCSServiceNotification {
    #[deku(bytes = 1)] pub paging_identity: Type3V<PagingIdentity>,
    #[deku(ctx = "Tag(96), NeedsByteSize")] pub cli: Type4TLV<CallingPartyBCDNumber>,
    #[deku(bytes = 1, ctx = "Tag(97)")] pub ss_code: Type3TV<SSCodeSSCode>,
    #[deku(bytes = 1, ctx = "Tag(98)")] pub lcs_ind: Type3TV<LCSIndLCSInd>,
    #[deku(ctx = "Tag(99)")] pub lcs_client_id: Type4TLV<()>,
}

#[derive(DekuRead, Debug, Serialize, Clone)]
pub struct PagingIdentity {
    #[deku(bits = 7)] pub spare: u8,
    pub value: PagingIdentityValue,
}

#[derive(DekuRead, Debug, Serialize, Clone)]
#[deku(ctx = "ByteSize(byte_size): ByteSize")]
pub struct CallingPartyBCDNumber {
    #[deku(bits = 1)] pub ext: u8,
    pub typ: CallingPartyBCDNumberType,
    pub numbering_plan: CallingPartyBCDNumberNumberingPlan,
    #[deku(count = "byte_size - deku::byte_offset")] pub num: Vec<u8>,
}
#[derive(DekuRead, Debug, Serialize, Clone, PartialEq)]
#[deku(id_type = "u8", bits = 8)]
pub enum SSCodeSSCode {
    #[deku(id_pat = "0")] AllSS,
    #[deku(id_pat = "16")] AllLineIdentificationSS,
    #[deku(id_pat = "17")] Clip,
    #[deku(id_pat = "18")] Clir,
    #[deku(id_pat = "19")] Colp,
    #[deku(id_pat = "20")] Colr,
    #[deku(id_pat = "21")] Mci,
    #[deku(id_pat = "24")] AllNameIdentificationSS,
    #[deku(id_pat = "25")] Cnap,
    #[deku(id_pat = "32")] AllForwardingSS,
    #[deku(id_pat = "33")] Cfu,
    #[deku(id_pat = "40")] AllCondForwardingSS,
    #[deku(id_pat = "41")] Cfb,
    #[deku(id_pat = "42")] Cfnry,
    #[deku(id_pat = "43")] Cfnrc,
    #[deku(id_pat = "36")] Cd,
    #[deku(id_pat = "48")] AllCallOfferingSS,
    #[deku(id_pat = "49")] Ect,
    #[deku(id_pat = "50")] Mah,
    #[deku(id_pat = "64")] AllCallCompletionSS,
    #[deku(id_pat = "65")] Cw,
    #[deku(id_pat = "66")] Hold,
    #[deku(id_pat = "67")] CcbsA,
    #[deku(id_pat = "68")] CcbsB,
    #[deku(id_pat = "69")] Mc,
    #[deku(id_pat = "80")] AllMultiPartySS,
    #[deku(id_pat = "81")] MultiPTY,
    #[deku(id_pat = "96")] AllCommunityOfInterestSS,
    #[deku(id_pat = "97")] Cug,
    #[deku(id_pat = "112")] AllChargingSS,
    #[deku(id_pat = "113")] Aoci,
    #[deku(id_pat = "114")] Aocc,
    #[deku(id_pat = "128")] AllAdditionalInfoTransferSS,
    #[deku(id_pat = "129")] Uus1,
    #[deku(id_pat = "130")] Uus2,
    #[deku(id_pat = "131")] Uus3,
    #[deku(id_pat = "144")] AllBarringSS,
    #[deku(id_pat = "145")] BarringOfOutgoingCalls,
    #[deku(id_pat = "146")] Baoc,
    #[deku(id_pat = "147")] Boic,
    #[deku(id_pat = "148")] BoicExHC,
    #[deku(id_pat = "153")] BarringOfIncomingCalls,
    #[deku(id_pat = "154")] Baic,
    #[deku(id_pat = "155")] BicRoam,
    #[deku(id_pat = "240")] AllPLMNSpecificSS,
    #[deku(id_pat = "241")] PlmnSpecificSS1,
    #[deku(id_pat = "242")] PlmnSpecificSS2,
    #[deku(id_pat = "243")] PlmnSpecificSS3,
    #[deku(id_pat = "244")] PlmnSpecificSS4,
    #[deku(id_pat = "245")] PlmnSpecificSS5,
    #[deku(id_pat = "246")] PlmnSpecificSS6,
    #[deku(id_pat = "247")] PlmnSpecificSS7,
    #[deku(id_pat = "248")] PlmnSpecificSS8,
    #[deku(id_pat = "249")] PlmnSpecificSS9,
    #[deku(id_pat = "250")] PlmnSpecificSSA,
    #[deku(id_pat = "251")] PlmnSpecificSSB,
    #[deku(id_pat = "252")] PlmnSpecificSSC,
    #[deku(id_pat = "253")] PlmnSpecificSSD,
    #[deku(id_pat = "254")] PlmnSpecificSSE,
    #[deku(id_pat = "255")] PlmnSpecificSSF,
    #[deku(id_pat = "160")] AllCallPrioritySS,
    #[deku(id_pat = "161")] Emlpp,
    #[deku(id_pat = "176")] AllLCSPrivacyException,
    #[deku(id_pat = "177")] Universal,
    #[deku(id_pat = "178")] CallSessionRelated,
    #[deku(id_pat = "179")] CallSessionUnrelated,
    #[deku(id_pat = "180")] Plmnoperator,
    #[deku(id_pat = "181")] ServiceType,
    #[deku(id_pat = "192")] AllMOLRSS,
    #[deku(id_pat = "193")] BasicSelfLocation,
    #[deku(id_pat = "194")] AutonomousSelfLocation,
    #[deku(id_pat = "195")] TransferToThirdParty,
    #[deku(id_pat = "_")] Other,
}

#[derive(DekuRead, Debug, Serialize, Clone, PartialEq)]
#[deku(id_type = "u8", bits = 8)]
pub enum LCSIndLCSInd {
    #[deku(id_pat = "1")] MTLR,
    #[deku(id_pat = "_")] Other,
}

#[derive(DekuRead, Debug, Serialize, Clone, PartialEq)]
#[deku(id_type = "u8", bits = 3)]
pub enum CallingPartyBCDNumberType {
    #[deku(id_pat = "0")] Unknown,
    #[deku(id_pat = "1")] InternationalNumber,
    #[deku(id_pat = "2")] NationalNumber,
    #[deku(id_pat = "3")] NetworkSpecificNumber,
    #[deku(id_pat = "4")] DedicatedAccessShortCode,
    #[deku(id_pat = "5")] Alphanumeric,
    #[deku(id_pat = "6")] AbbreviatedNumber,
    #[deku(id_pat = "7")] Reserved,
    #[deku(id_pat = "_")] Other,
}

#[derive(DekuRead, Debug, Serialize, Clone, PartialEq)]
#[deku(id_type = "u8", bits = 4)]
pub enum CallingPartyBCDNumberNumberingPlan {
    #[deku(id_pat = "0")] Unknown,
    #[deku(id_pat = "1")] ISDNTelephonyNumberingPlanE164E163,
    #[deku(id_pat = "2")] GenericNumberingPlan,
    #[deku(id_pat = "3")] DataNumberingPlanX121,
    #[deku(id_pat = "4")] TelexNumberingPlanF69,
    #[deku(id_pat = "5 | 6")] ServiceCenterSpecific,
    #[deku(id_pat = "8")] NationalNumberingPlan,
    #[deku(id_pat = "9")] PrivateNumberingPlan,
    #[deku(id_pat = "10")] ERMESNumberingPlan,
    #[deku(id_pat = "11")] ReservedForCTS,
    #[deku(id_pat = "15")] Reserved,
    #[deku(id_pat = "_")] Other,
}

#[derive(DekuRead, Debug, Serialize, Clone, PartialEq)]
#[deku(id_type = "u8", bits = 1)]
pub enum PagingIdentityValue {
    #[deku(id_pat = "0")] IMSI,
    #[deku(id_pat = "1")] TMSI,
    #[deku(id_pat = "_")] Other,
}

