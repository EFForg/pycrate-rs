
use deku::prelude::*;
use deku::ctx::ByteSize;
use serde::Serialize;
use crate::nas::layer3::*;

/// Autogenerated rust code, do not modify directly! Any changes should be
/// made via the python generator scripts.

#[derive(DekuRead, Debug, Serialize, Clone)]
pub struct ESMDeactEPSBearerCtxtAccept {
    #[deku(ctx = "Tag(39)")] pub prot_config: Type4TLV<ProtConfig>,
    #[deku(ctx = "Tag(123)")] pub ext_prot_config: Type6TLVE<ProtConfig>,
}

#[derive(DekuRead, Debug, Serialize, Clone)]
pub struct ProtConfig {
    #[deku(bits = 1)] pub ext: u8,
    #[deku(bits = 4)] pub spare: u8,
    pub prot: ProtConfigProt,
    pub config: (),
}
#[derive(DekuRead, Debug, Serialize, Clone, PartialEq)]
#[deku(id_type = "u8", bits = 3)]
pub enum ProtConfigProt {
    #[deku(id_pat = "0")] PPPWithIPPDP,
    #[deku(id_pat = "_")] Other,
}

