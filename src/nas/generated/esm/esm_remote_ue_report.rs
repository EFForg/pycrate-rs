
use deku::prelude::*;
use deku::ctx::ByteSize;
use serde::Serialize;
use crate::nas::layer3::*;

/// Autogenerated rust code, do not modify directly! Any changes should be
/// made via the python generator scripts.

#[derive(DekuRead, Debug, Serialize, Clone)]
pub struct ESMRemoteUEReport {
    #[deku(ctx = "Tag(121)")] pub remote_ue_connected: Type6TLVE<RemoteUECtxtList>,
    #[deku(ctx = "Tag(122)")] pub remote_ue_disconnected: Type6TLVE<RemoteUECtxtList>,
    #[deku(ctx = "Tag(111), NeedsByteSize")] pub pkmf_addr: Type4TLV<PKMFAddr>,
}

#[derive(DekuRead, Debug, Serialize, Clone)]
pub struct RemoteUECtxtList {
    #[deku(bytes = 1)] pub num: u8,
    pub remote_ue_ctxts: (),
}

#[derive(DekuRead, Debug, Serialize, Clone)]
#[deku(ctx = "ByteSize(byte_size): ByteSize")]
pub struct PKMFAddr {
    #[deku(bits = 5)] pub spare: u8,
    pub typ: PKMFAddrType,
    #[deku(count = "byte_size - deku::byte_offset")] pub addr: Vec<u8>,
}
#[derive(DekuRead, Debug, Serialize, Clone, PartialEq)]
#[deku(id_type = "u8", bits = 3)]
pub enum PKMFAddrType {
    #[deku(id_pat = "1")] IPv4,
    #[deku(id_pat = "2")] IPv6,
    #[deku(id_pat = "_")] Other,
}

